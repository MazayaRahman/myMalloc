#include "mymalloc.h"
#define BLOCKSIZE 4096

static char myBlock[BLOCKSIZE] = {'\0'};

char* root = myBlock;

const char isFree = 'f';
const char inUse = 'u';

char* findMem(unsigned int size){

    //start at root
    char* ptr = root;
    int currSize = 0;

    while(ptr != NULL){
        currSize = *(int*)(ptr+1);
        if(*ptr == isFree && currSize >= size + 5){
            //found it
            return ptr;
        }
	else{
		if(ptr + currSize + size >= root + BLOCKSIZE -1) //there isnt enough space
			return NULL;
	
        
        ptr = ptr + currSize + 5;


    }
    return ptr;


}

void split(char* block, unsigned int size){

    char* extra;
    int block_size = *(int*)(block+1);

    //extra block size
    extra_block_size = block_size - size -5;
	if (extra_block_size > 0){

    extra = block + size + 5;
    *extra = isFree;
    *(int*)(extra+1) = block_size;
	return;
	}
